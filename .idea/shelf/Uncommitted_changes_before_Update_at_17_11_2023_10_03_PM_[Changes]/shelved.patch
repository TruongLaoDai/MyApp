Index: .idea/shelf/Uncommitted_changes_before_Update_at_9_11_2023_10_14_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_9_11_2023_10_14_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_9_11_2023_10_14_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_9_11_2023_10_14_PM__Changes_.xml	(revision 3604f677c60278fa7e939f9358366ff10209bf7e)
+++ /dev/null	(revision 3604f677c60278fa7e939f9358366ff10209bf7e)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_9_11_2023_10_14_PM_[Changes]" date="1699542865596" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_9_11_2023_10_14_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 9/11/2023 10:14 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_9_11_2023_10_14_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_9_11_2023_10_14_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_9_11_2023_10_14_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_9_11_2023_10_14_PM_[Changes]/shelved.patch	(revision 3604f677c60278fa7e939f9358366ff10209bf7e)
+++ /dev/null	(revision 3604f677c60278fa7e939f9358366ff10209bf7e)
@@ -1,25 +0,0 @@
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>plugins {\r\n    id 'com.android.application'\r\n    id 'com.google.gms.google-services'\r\n    id 'kotlin-android'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.smile.watchmovie'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.smile.watchmovie\"\r\n        minSdk 19\r\n        targetSdk 33\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        multiDexEnabled true\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_17\r\n        targetCompatibility JavaVersion.VERSION_17\r\n    }\r\n\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n\r\n    dependenciesInfo {\r\n        includeInBundle true\r\n        includeInApk true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'com.facebook.android:facebook-android-sdk:16.0.0'\r\n    implementation 'com.google.android.gms:play-services-auth:20.7.0'\r\n    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.11'\r\n    implementation \"com.github.bumptech.glide:okhttp3-integration:4.16.0\"\r\n    implementation 'com.google.code.gson:gson:2.10.1'\r\n\r\n    /* Khai báo thư viện Retrofit gọi API */\r\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\r\n\r\n    implementation 'javax.annotation:javax.annotation-api:1.3.2'\r\n    implementation 'com.google.android.material:material:1.10.0'\r\n    implementation 'com.google.firebase:firebase-firestore:24.9.0'\r\n\r\n    /* Đường dẫn file aar trên window */\r\n    /* implementation fileTree(dir: 'E:\\\\zpdk-release-v3.1', include: ['*.aar', '*.jar'], exclude: [])\r\n    implementation files(\"E:\\\\zpdk-release-v3.1.aar\") */\r\n\r\n    /* Đường dẫn file arr trên Mac */\r\n    implementation fileTree(dir: '/Users/ringme/Downloads', include: ['*.aar', '*.jar'], exclude: [])\r\n\r\n    testImplementation 'junit:junit:4.13.2'\r\n\r\n    /* Thư viện load ảnh */\r\n    implementation 'com.github.bumptech.glide:glide:4.16.0'\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.6.1'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.5'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'\r\n    implementation 'com.google.firebase:firebase-database:20.3.0'\r\n    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'\r\n    implementation 'androidx.multidex:multidex:2.0.1'\r\n\r\n    /* Thư viện load phim */\r\n    implementation 'com.google.android.exoplayer:exoplayer:2.19.1'\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:31.2.1')\r\n    implementation 'com.google.firebase:firebase-messaging'\r\n    implementation(\"com.squareup.okhttp3:okhttp:4.10.0\")\r\n    implementation(\"commons-codec:commons-codec:1.14\")\r\n\r\n    /* Khai báo trình lắng nghe sự kiện EventBus */\r\n    implementation \"org.greenrobot:eventbus:3.3.1\"\r\n\r\n    /* Tích hợp mã Kotlin vào dự án Java */\r\n    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.10'\r\n\r\n    /* Khai báo sử dụng KTX của viewModel */\r\n    implementation \"androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2\"\r\n\r\n    /* Khai báo sử dụng KTX của liveData */\r\n    implementation(\"androidx.lifecycle:lifecycle-livedata-ktx:2.6.2\")\r\n\r\n    /* Khai báo thư viện Paging 3 */\r\n    implementation(\"androidx.paging:paging-runtime-ktx:3.2.1\")\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/build.gradle b/app/build.gradle
---- a/app/build.gradle	(revision 6d3cc980ecdd9da7021d1aea654ddff1fd163fba)
-+++ b/app/build.gradle	(date 1699368633899)
-@@ -58,11 +58,11 @@
-     implementation 'com.google.firebase:firebase-firestore:24.9.0'
- 
-     /* Đường dẫn file aar trên window */
--    /* implementation fileTree(dir: 'E:\\zpdk-release-v3.1', include: ['*.aar', '*.jar'], exclude: [])
--    implementation files("E:\\zpdk-release-v3.1.aar") */
-+    implementation fileTree(dir: 'E:\\zpdk-release-v3.1', include: ['*.aar', '*.jar'], exclude: [])
-+    implementation files("E:\\zpdk-release-v3.1.aar")
- 
-     /* Đường dẫn file arr trên Mac */
--    implementation fileTree(dir: '/Users/ringme/Downloads', include: ['*.aar', '*.jar'], exclude: [])
-+    /*implementation fileTree(dir: '/Users/ringme/Downloads', include: ['*.aar', '*.jar'], exclude: [])*/
- 
-     testImplementation 'junit:junit:4.13.2'
- 
Index: app/src/main/java/com/smile/watchmovie/activity/PlayerActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.smile.watchmovie.activity;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.ActivityInfo;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.WindowManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport com.google.android.exoplayer2.ExoPlayer;\r\nimport com.google.android.exoplayer2.MediaItem;\r\nimport com.google.android.exoplayer2.PlaybackParameters;\r\nimport com.google.android.exoplayer2.Player;\r\nimport com.google.android.material.tabs.TabLayoutMediator;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.smile.watchmovie.R;\r\nimport com.smile.watchmovie.adapter.WatchFilmViewPagerAdapter;\r\nimport com.smile.watchmovie.databinding.ActivityWatchFilmBinding;\r\nimport com.smile.watchmovie.model.FilmMainHome;\r\nimport com.smile.watchmovie.model.HistoryWatchFilm;\r\nimport com.smile.watchmovie.model.SubFilm;\r\nimport com.smile.watchmovie.utils.Constant;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Collections;\r\nimport java.util.Date;\r\nimport java.util.Locale;\r\n\r\npublic class PlayerActivity extends AppCompatActivity implements Player.Listener {\r\n    private ActivityWatchFilmBinding binding;\r\n    public FilmMainHome film;\r\n    private ExoPlayer player;\r\n    private ImageView fullScreen;\r\n    private TextView tvSpeed;\r\n    private CollectionReference collectionReference;\r\n    public String idUser, isVip;\r\n    private boolean isFullScreen = false, existHistory = false;\r\n    private float speed;\r\n    private boolean auto_play, full_screen;\r\n    private HistoryWatchFilm historyWatchFilm;\r\n    private int markerSpeedPlayFilm = 1;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityWatchFilmBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n\r\n        /* Lấy dữ liệu phim được gửi sang */\r\n        film = (FilmMainHome) getIntent().getSerializableExtra(\"film\");\r\n\r\n        /* Lấy thông tin user và các cài đặt */\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\r\n                Constant.NAME_DATABASE_SHARED_PREFERENCES,\r\n                Context.MODE_PRIVATE\r\n        );\r\n        idUser = sharedPreferences.getString(Constant.ID_USER, \"\");\r\n        isVip = sharedPreferences.getString(Constant.IS_VIP, \"0\");\r\n        full_screen = sharedPreferences.getBoolean(Constant.FULL_SCREEN, false);\r\n        auto_play = sharedPreferences.getBoolean(Constant.AUTO_PLAY, true);\r\n\r\n        /* mapping from custom_playback_view.xml */\r\n        fullScreen = binding.exoplayerView.findViewById(R.id.ivFullscreen);\r\n        ImageView speedPlayVideo = binding.exoplayerView.findViewById(R.id.iv_speed_play_vertical);\r\n        tvSpeed = binding.exoplayerView.findViewById(R.id.tv_speed_play_vertical);\r\n\r\n        /* Thiết lập dữ liệu */\r\n        if (film != null) {\r\n            setupFirebase();\r\n            prepareVideo();\r\n            controllerTimeVideo();\r\n            setFullScreen();\r\n            initialInfoRelate();\r\n            speedPlayVideo.setOnClickListener(view -> playSpeedFilm());\r\n        }\r\n    }\r\n\r\n    private void setupFirebase() {\r\n        if (!idUser.equals(\"\")) {\r\n            /* Khởi tạo dữ liệu firebase */\r\n            FirebaseFirestore firebaseFirestore = FirebaseFirestore.getInstance();\r\n            collectionReference = firebaseFirestore.collection(Constant.FirebaseFiretore.NAME_DATABASE);\r\n\r\n            /* Load lịch sử xem */\r\n            loadTimeWatched();\r\n        }\r\n    }\r\n\r\n    private void prepareVideo() {\r\n        if ((idUser == null || idUser.equals(\"\")) && film.getId() % 2 == 0) {\r\n            showDialog(\"Bạn cần đăng nhập tài khoản và đăng ký tài khoản vip (Nếu chưa có) để có thể xem nội dung bộ phim này. (Hãy vào mục Hồ sơ để thực hiện)\");\r\n        } else if (isVip.equals(\"0\") && film.getId() % 2 == 0) {\r\n            showDialog(\"Bạn cần đăng ký tài khoản vip để có thể xem nội dung bộ phim này. (Hãy vào mục Hồ sơ để thực hiện đăng ký)\");\r\n        } else {\r\n            /* Khởi tạo trình phát */\r\n            setUpPlayer();\r\n        }\r\n    }\r\n\r\n    private void setUpPlayer() {\r\n        player = new ExoPlayer.Builder(this).build();\r\n        binding.exoplayerView.setPlayer(player);\r\n\r\n        /* Phát phim */\r\n        playFilmFirst();\r\n    }\r\n\r\n    private void playFilmFirst() {\r\n        if (film.getSubVideoList() != null) {\r\n            Collections.sort(film.getSubVideoList());\r\n            playFilm(film.getSubVideoList().get(0));\r\n        } else {\r\n            SubFilm subFilm = new SubFilm();\r\n            subFilm.setLink(film.getLink());\r\n            playFilm(subFilm);\r\n        }\r\n    }\r\n\r\n    public void playFilm(SubFilm subFilm) {\r\n        if (player.isPlaying()) {\r\n            player.stop();\r\n        }\r\n\r\n        MediaItem mediaItem = MediaItem.fromUri(subFilm.getLink());\r\n        player.setMediaItem(mediaItem);\r\n        player.prepare();\r\n\r\n        if (auto_play) {\r\n            player.play();\r\n        }\r\n    }\r\n\r\n    private void controllerTimeVideo() {\r\n        binding.exoplayerView.findViewById(R.id.forward).setOnClickListener(v -> player.seekTo(player.getCurrentPosition() + 10000));\r\n        binding.exoplayerView.findViewById(R.id.rewind).setOnClickListener(v -> player.seekTo(player.getCurrentPosition() - 10000));\r\n    }\r\n\r\n    private void setFullScreen() {\r\n        fullScreen.setOnClickListener(v -> {\r\n            ViewGroup.LayoutParams params = binding.exoplayerView.getLayoutParams();\r\n            if (!isFullScreen) {\r\n                params.height = ViewGroup.LayoutParams.MATCH_PARENT;\r\n                binding.exoplayerView.setLayoutParams(params);\r\n\r\n                getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n\r\n                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_SENSOR_LANDSCAPE);\r\n                fullScreen.setImageDrawable(ContextCompat.getDrawable(getApplicationContext(), R.drawable.ic_baseline_fullscreen_exit_24));\r\n                isFullScreen = true;\r\n            } else {\r\n                params.height = 404;\r\n                binding.exoplayerView.setLayoutParams(params);\r\n\r\n                getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n\r\n                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED);\r\n                fullScreen.setImageDrawable(ContextCompat.getDrawable(getApplicationContext(), R.drawable.ic_fullscreen));\r\n                isFullScreen = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    public void playSpeedFilm() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(PlayerActivity.this);\r\n        builder.setTitle(\"Tốc độ phát\");\r\n\r\n        String[] items = {\"0.5\", \"Chuẩn\", \"1.25\", \"1.5\", \"2\"};\r\n\r\n        builder.setSingleChoiceItems(items, markerSpeedPlayFilm, (dialog, which) -> {\r\n            switch (which) {\r\n                case 0 -> {\r\n                    speed = 0.5f;\r\n                    markerSpeedPlayFilm = 0;\r\n                    tvSpeed.setText(\"0.5x\");\r\n                    tvSpeed.setVisibility(View.VISIBLE);\r\n                }\r\n                case 1 -> {\r\n                    speed = 1f;\r\n                    markerSpeedPlayFilm = 1;\r\n                    tvSpeed.setVisibility(View.GONE);\r\n                }\r\n                case 2 -> {\r\n                    speed = 1.25f;\r\n                    markerSpeedPlayFilm = 2;\r\n                    tvSpeed.setText(\"1.25x\");\r\n                    tvSpeed.setVisibility(View.VISIBLE);\r\n                }\r\n                case 3 -> {\r\n                    speed = 1.5f;\r\n                    markerSpeedPlayFilm = 3;\r\n                    tvSpeed.setText(\"1.5x\");\r\n                    tvSpeed.setVisibility(View.VISIBLE);\r\n                }\r\n                case 4 -> {\r\n                    speed = 2f;\r\n                    markerSpeedPlayFilm = 4;\r\n                    tvSpeed.setText(\"2x\");\r\n                    tvSpeed.setVisibility(View.VISIBLE);\r\n                }\r\n                default -> dialog.dismiss();\r\n            }\r\n            dialog.dismiss();\r\n            player.setPlaybackSpeed(speed);\r\n        });\r\n\r\n        AlertDialog dialog = builder.create();\r\n        dialog.show();\r\n    }\r\n\r\n    private void initialInfoRelate() {\r\n        /* Khởi tạo viewpager và tabLayout */\r\n        WatchFilmViewPagerAdapter viewPagerAdapter = new WatchFilmViewPagerAdapter(this);\r\n        binding.viewPager.setAdapter(viewPagerAdapter);\r\n        binding.viewPager.setUserInputEnabled(false);\r\n        new TabLayoutMediator(binding.tabLayout, binding.viewPager, ((tab, position) -> {\r\n            switch (position) {\r\n                case 0 -> tab.setText(\"Giới thiệu\");\r\n                case 1 -> tab.setText(\"Bình luận\");\r\n            }\r\n        })).attach();\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        super.onBackPressed();\r\n//        saveHistoryWatch();\r\n        if (player != null) {\r\n            if (player.isPlaying()) {\r\n                player.stop();\r\n            }\r\n            player.release();\r\n        }\r\n    }\r\n\r\n    private void saveHistoryWatch() {\r\n        if (!idUser.equals(\"\") && player.getCurrentPosition() >= 30000) {\r\n            SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"dd-MM-yyyy\", Locale.getDefault());\r\n            Date date = new Date();\r\n            String dateWatch = simpleDateFormat.format(date);\r\n            long timeWatch = player.getCurrentPosition();\r\n            if (existHistory) {\r\n                historyWatchFilm.setDayWatch(dateWatch);\r\n                historyWatchFilm.setDuration(timeWatch);\r\n                updateDataTimeWatchFilm(historyWatchFilm);\r\n            } else {\r\n                HistoryWatchFilm historyWatchFilm = new HistoryWatchFilm(film.getId(), timeWatch, dateWatch, film.getAvatar(), film.getName());\r\n                collectionReference.document(\"tblhistorywatchfilm\").collection(idUser).add(historyWatchFilm);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void updateDataTimeWatchFilm(HistoryWatchFilm history) {\r\n        collectionReference.document(\"tblhistorywatchfilm\").collection(idUser)\r\n                .document(history.getDocumentID())\r\n                .update(\"duration\", history.getDuration(), \"dayWatch\", history.getDayWatch());\r\n    }\r\n\r\n    private String messagePlayAtTime(long time) {\r\n        int hour = (int) (time / 1000 / 3600);\r\n        int minute = (int) ((time / 1000 - hour * 3600) / 60);\r\n        int second = (int) (time / 1000 - hour * 3600 - minute * 60);\r\n        return \"Bạn có muốn tiếp tục xem bộ phim tại thời điểm: \" + hour + \":\" + minute + \":\" + second + \" hay không?\";\r\n    }\r\n\r\n    private void showDialog(String title) {\r\n        new AlertDialog.Builder(this)\r\n                .setMessage(title)\r\n                .setPositiveButton(\"Xác nhận\", (dialog, id) -> dialog.dismiss())\r\n                .create()\r\n                .show();\r\n    }\r\n\r\n    public void loadTimeWatched() {\r\n        collectionReference.document(Constant.FirebaseFiretore.TABLE_HISTORY_WATCHED)\r\n                .collection(idUser)\r\n                .whereEqualTo(Constant.FirebaseFiretore.ID_FILM, film.getId())\r\n                .get()\r\n                .addOnSuccessListener(queryDocumentSnapshots -> {\r\n                    if (queryDocumentSnapshots.getDocuments().size() > 0) {\r\n                        DocumentSnapshot doc = queryDocumentSnapshots.getDocuments().get(0);\r\n                        historyWatchFilm = doc.toObject(HistoryWatchFilm.class);\r\n                        if (historyWatchFilm != null) {\r\n                            historyWatchFilm.setDocumentID(doc.getId());\r\n                            /* showDialog(messagePlayAtTime(historyWatchFilm.getDuration()), 2, historyWatchFilm.getDuration()); */\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/smile/watchmovie/activity/PlayerActivity.java b/app/src/main/java/com/smile/watchmovie/activity/PlayerActivity.java
--- a/app/src/main/java/com/smile/watchmovie/activity/PlayerActivity.java	(revision 3604f677c60278fa7e939f9358366ff10209bf7e)
+++ b/app/src/main/java/com/smile/watchmovie/activity/PlayerActivity.java	(date 1700062870606)
@@ -232,7 +232,6 @@
     @Override
     public void onBackPressed() {
         super.onBackPressed();
-//        saveHistoryWatch();
         if (player != null) {
             if (player.isPlaying()) {
                 player.stop();
Index: app/src/main/java/com/smile/watchmovie/fragment/InfoFilmFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.smile.watchmovie.fragment\r\n\r\nimport android.graphics.Color\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport com.google.firebase.firestore.DocumentReference\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.google.firebase.firestore.QuerySnapshot\r\nimport com.smile.watchmovie.R\r\nimport com.smile.watchmovie.activity.PlayerActivity\r\nimport com.smile.watchmovie.adapter.EpisodeAdapter\r\nimport com.smile.watchmovie.adapter.EpisodeAdapter.OnListener\r\nimport com.smile.watchmovie.adapter.FilmRelativeAdapter\r\nimport com.smile.watchmovie.api.ApiHelper\r\nimport com.smile.watchmovie.api.ApiService\r\nimport com.smile.watchmovie.api.RetrofitBuilder\r\nimport com.smile.watchmovie.base.ViewModelFactory\r\nimport com.smile.watchmovie.databinding.FragmentIntroduceFilmBinding\r\nimport com.smile.watchmovie.dialog.InfoFilmDialog\r\nimport com.smile.watchmovie.model.FilmArrayResponse\r\nimport com.smile.watchmovie.model.FilmMainHome\r\nimport com.smile.watchmovie.model.FilmReaction\r\nimport com.smile.watchmovie.model.SubFilm\r\nimport com.smile.watchmovie.utils.Constant\r\nimport com.smile.watchmovie.viewmodel.InfoFilmFragmentViewModel\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport java.text.SimpleDateFormat\r\nimport java.util.Collections\r\nimport java.util.Date\r\nimport java.util.Locale\r\n\r\nclass InfoFilmFragment : Fragment(), OnListener, FilmRelativeAdapter.OnClickListener {\r\n    private lateinit var binding: FragmentIntroduceFilmBinding\r\n    private lateinit var activity: PlayerActivity\r\n    private lateinit var filmRelativeAdapter: FilmRelativeAdapter\r\n    private lateinit var viewModel: InfoFilmFragmentViewModel\r\n    private var idUser: String = \"\"\r\n    private lateinit var filmMainHome: FilmMainHome\r\n    private lateinit var mEpisodeAdapter: EpisodeAdapter\r\n    private lateinit var documentReferenceFilmFavorite: DocumentReference\r\n    private lateinit var documentReferenceFilmLike: DocumentReference\r\n    private lateinit var documentReferenceFilmDislike: DocumentReference\r\n    private var changeImageDislikeFilm = 0\r\n    private var changeImageLikeFilm = 0\r\n    private var currentLike = 0\r\n    private var currentDislike = 0\r\n    private var statusLike = 0\r\n    private var statusDislike = 0\r\n    private var statusFavorite = 0\r\n    private lateinit var mediaLike: FilmReaction\r\n    private lateinit var mediaDislike: FilmReaction\r\n    private lateinit var subFilmArrayList: List<SubFilm>\r\n    private lateinit var documentIdFilmFavorite: String\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View {\r\n        binding = FragmentIntroduceFilmBinding.inflate(inflater, container, false)\r\n\r\n        activity = requireActivity() as PlayerActivity\r\n        initializeData()\r\n        if (activity.idUser != \"\") {\r\n            setUpFireBase()\r\n        }\r\n        handleEventClick()\r\n\r\n        return binding.root\r\n    }\r\n\r\n    private fun initialFilmRelate() {\r\n        callApiGetByCategoryListMovie(filmMainHome.categoryId, (0..5).random())\r\n    }\r\n\r\n    private fun handleEventClick() {\r\n        binding.apply {\r\n            /* Nhấn tải phim */\r\n            loutDownload.setOnClickListener {\r\n                Toast.makeText(activity, getString(R.string.feature_deploying), Toast.LENGTH_SHORT)\r\n                    .show()\r\n            }\r\n\r\n            /* Bắt sự kiện người dùng nhấn xem mô tả phim */\r\n            loutIntro.setOnClickListener { clickOpenDetailFilm() }\r\n\r\n            /* Nhấn yêu thích */\r\n            loutFavorite.setOnClickListener {\r\n                if (activity.idUser == \"\") {\r\n                    Toast.makeText(\r\n                        requireActivity(),\r\n                        getString(R.string.not_logged_in_message),\r\n                        Toast.LENGTH_SHORT\r\n                    ).show()\r\n                } else {\r\n                    updateFavorite()\r\n                }\r\n            }\r\n        }\r\n\r\n        /* Nhấn like */binding.loutLike.setOnClickListener { v: View? ->\r\n            if (idUser == null || idUser == \"\") {\r\n                Toast.makeText(\r\n                    requireActivity(),\r\n                    \"Bạn cần đăng nhập tài khoản để thực hiện tính năng này\",\r\n                    Toast.LENGTH_SHORT\r\n                ).show()\r\n            } else {\r\n                setUpViewLikeFilm()\r\n            }\r\n        }\r\n\r\n        /* Nhấn dislike */binding.loutDislike.setOnClickListener { v: View? ->\r\n            if (idUser == null || idUser == \"\") {\r\n                Toast.makeText(\r\n                    requireActivity(),\r\n                    \"Bạn cần đăng nhập tài khoản để thực hiện tính năng này\",\r\n                    Toast.LENGTH_SHORT\r\n                ).show()\r\n            } else {\r\n                setUpViewDislikeFilm()\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun initializeData() {\r\n        filmMainHome = activity.film\r\n        viewModel = ViewModelProvider(\r\n            this,\r\n            ViewModelFactory(ApiHelper(RetrofitBuilder.apiServiceFilm))\r\n        )[InfoFilmFragmentViewModel::class.java]\r\n\r\n        filmRelativeAdapter = FilmRelativeAdapter(requireActivity(), this)\r\n        mEpisodeAdapter = EpisodeAdapter(this)\r\n\r\n        binding.apply {\r\n            rcvMore.apply {\r\n                adapter = filmRelativeAdapter\r\n                setHasFixedSize(true)\r\n            }\r\n\r\n            rcvEpisode.apply {\r\n                adapter = mEpisodeAdapter\r\n                setHasFixedSize(true)\r\n            }\r\n        }\r\n\r\n        /* Hiển thị các thông tin liên quan đến bộ phim */\r\n        showInfo()\r\n    }\r\n\r\n    private fun showInfo() {\r\n        binding.apply {\r\n            /* Hiển thị thông tin cơ bản về phim */\r\n            tvNameFilm.text = filmMainHome.name\r\n            tvViewNumber.text = activity.getString(R.string.tv_view_number, filmMainHome.viewNumber)\r\n        }\r\n\r\n        /* Hiển thị các bộ phim liên quan */\r\n        initialFilmRelate()\r\n\r\n        /* Hiển thị số tập phim của phim đang chiếu */\r\n        showEpisodesTotal()\r\n    }\r\n\r\n    private fun showEpisodesTotal() {\r\n        if (filmMainHome.subVideoList != null) {\r\n            subFilmArrayList = filmMainHome.subVideoList\r\n            Collections.sort(subFilmArrayList)\r\n            subFilmArrayList[0].setWatching(true)\r\n\r\n            mEpisodeAdapter.setData(subFilmArrayList)\r\n            binding.loutEpisode.visibility = View.VISIBLE\r\n        } else {\r\n            binding.loutEpisode.visibility = View.GONE\r\n        }\r\n    }\r\n\r\n    private fun clickOpenDetailFilm() {\r\n        val dialog = InfoFilmDialog(filmMainHome, requireActivity())\r\n        dialog.show(activity.supportFragmentManager, InfoFilmDialog.TAG)\r\n    }\r\n\r\n    private fun setUpFireBase() {\r\n        val firebaseFirestore = FirebaseFirestore.getInstance()\r\n        documentReferenceFilmFavorite = firebaseFirestore.document(\"WatchFilm/tblfilmfavorite\")\r\n        documentReferenceFilmLike = firebaseFirestore.document(\"WatchFilm/tblfilmlike\")\r\n        documentReferenceFilmDislike = firebaseFirestore.document(\"WatchFilm/tblfilmdislike\")\r\n        loadFavorite()\r\n        loadLike()\r\n        loadDislike()\r\n    }\r\n\r\n    private fun setUpViewLikeFilm() {\r\n        if (changeImageLikeFilm == R.drawable.ic_like_film) {\r\n            if (changeImageDislikeFilm == R.drawable.ic_disliked) {\r\n                currentDislike -= 1\r\n                if (currentDislike < 0) {\r\n                    currentDislike = 0\r\n                }\r\n                binding.tvDislikeNumber.text = activity.getString(R.string.dislike)\r\n                changeImageDislikeFilm = R.drawable.ic_dislike\r\n                binding.ivDislike.setImageResource(changeImageDislikeFilm)\r\n                binding.tvDislikeNumber.setTextColor(Color.parseColor(\"#777776\"))\r\n            }\r\n            changeImageLikeFilm = R.drawable.ic_liked_film\r\n            binding.tvLikeNumber.setTextColor(Color.parseColor(\"#2A48E8\"))\r\n            currentLike += 1\r\n            binding.tvLikeNumber.text = activity.getString(R.string.number, currentLike)\r\n        } else if (changeImageLikeFilm == R.drawable.ic_liked_film) {\r\n            changeImageLikeFilm = R.drawable.ic_like_film\r\n            binding.tvLikeNumber.setTextColor(Color.parseColor(\"#777776\"))\r\n            currentLike -= 1\r\n            if (currentLike < 0) {\r\n                currentLike = 0\r\n            }\r\n            binding.tvLikeNumber.text = activity.getString(R.string.like)\r\n        }\r\n        binding.ivLike.setImageResource(changeImageLikeFilm)\r\n        updateFilmLike()\r\n        updateFilmDisLike()\r\n    }\r\n\r\n    private fun setUpViewDislikeFilm() {\r\n        if (changeImageDislikeFilm == R.drawable.ic_dislike) {\r\n            if (changeImageLikeFilm == R.drawable.ic_liked_film) {\r\n                currentLike -= 1\r\n                if (currentLike < 0) {\r\n                    currentLike = 0\r\n                }\r\n                binding.tvLikeNumber.text = activity.getString(R.string.like)\r\n                changeImageLikeFilm = R.drawable.ic_like_film\r\n                binding.ivLike.setImageResource(changeImageLikeFilm)\r\n                binding.tvLikeNumber.setTextColor(Color.parseColor(\"#777776\"))\r\n            }\r\n            changeImageDislikeFilm = R.drawable.ic_disliked\r\n            binding.tvDislikeNumber.setTextColor(Color.parseColor(\"#2A48E8\"))\r\n            currentDislike += 1\r\n            binding.tvDislikeNumber.text = activity.getString(R.string.number, currentDislike)\r\n        } else if (changeImageDislikeFilm == R.drawable.ic_disliked) {\r\n            changeImageDislikeFilm = R.drawable.ic_dislike\r\n            binding.tvDislikeNumber.setTextColor(Color.parseColor(\"#777776\"))\r\n            currentDislike -= 1\r\n            if (currentDislike < 0) {\r\n                currentDislike = 0\r\n            }\r\n            binding.tvDislikeNumber.text = activity.getString(R.string.dislike)\r\n        }\r\n        binding.ivDislike.setImageResource(changeImageDislikeFilm)\r\n        updateFilmDisLike()\r\n        updateFilmLike()\r\n    }\r\n\r\n    private fun callApiGetByCategoryListMovie(categoryId: Int, page: Int) {\r\n        ApiService.apiService.getFilmByCategory(Constant.Api.WS_TOKEN, categoryId, page, 15)\r\n            .enqueue(object : Callback<FilmArrayResponse> {\r\n                override fun onResponse(\r\n                    call: Call<FilmArrayResponse>,\r\n                    response: Response<FilmArrayResponse>\r\n                ) {\r\n                    if (response.isSuccessful) {\r\n                        response.body()?.let {\r\n                            it.data?.let { listFilmRelative ->\r\n                                filmRelativeAdapter.updateData(listFilmRelative as ArrayList)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                override fun onFailure(call: Call<FilmArrayResponse?>, t: Throwable) {\r\n                    Log.e(this::class.java.simpleName, t.message.toString())\r\n                }\r\n            })\r\n    }\r\n\r\n    private fun loadFavorite() {\r\n        documentReferenceFilmFavorite\r\n            .collection(activity.idUser)\r\n            .whereEqualTo(\"idFilm\", filmMainHome.id)\r\n            .get()\r\n            .addOnSuccessListener { querySnapshot: QuerySnapshot ->\r\n                if (querySnapshot.size() > 0) {\r\n                    val reaction = querySnapshot.documents[0].toObject(FilmReaction::class.java)\r\n                    documentIdFilmFavorite = querySnapshot.documents[0].id\r\n                    reaction?.let {\r\n                        statusFavorite = 1\r\n                        binding.apply {\r\n                            ivAddFavorite.setImageResource(R.drawable.ic_added_favorite)\r\n                            tvFavorite.setTextColor(Color.parseColor(\"#2A48E8\"))\r\n                        }\r\n                    }\r\n                } else {\r\n                    statusFavorite = 0\r\n                    binding.apply {\r\n                        ivAddFavorite.setImageResource(R.drawable.ic_add_favorite)\r\n                        tvFavorite.setTextColor(Color.parseColor(\"#313030\"))\r\n                    }\r\n                }\r\n            }\r\n    }\r\n\r\n    private fun loadLike() {\r\n        documentReferenceFilmLike\r\n            .collection(filmMainHome.id.toString() + \"\")\r\n            .whereEqualTo(\"idUser\", idUser)\r\n            .get().addOnSuccessListener { queryDocumentSnapshots: QuerySnapshot ->\r\n                if (queryDocumentSnapshots.size() > 0) {\r\n                    mediaLike = queryDocumentSnapshots.documents[0].toObject(\r\n                        FilmReaction::class.java\r\n                    )!!\r\n                    if (mediaLike != null) {\r\n                        mediaLike.documentId = queryDocumentSnapshots.documents[0].id\r\n                        if (mediaLike.type_reaction == 1) {\r\n                            statusLike = 2\r\n                            changeImageDislikeFilm = R.drawable.ic_dislike\r\n                            changeImageLikeFilm = R.drawable.ic_liked_film\r\n                            binding.ivLike.setImageResource(changeImageLikeFilm)\r\n                            binding.tvLikeNumber.setTextColor(Color.parseColor(\"#2A48E8\"))\r\n                        } else {\r\n                            changeImageLikeFilm = R.drawable.ic_like_film\r\n                            statusLike = 1\r\n                        }\r\n                    } else {\r\n                        statusLike = 0\r\n                    }\r\n                } else {\r\n                    changeImageLikeFilm = R.drawable.ic_like_film\r\n                    statusLike = 0\r\n                }\r\n            }\r\n    }\r\n\r\n    private fun loadDislike() {\r\n        documentReferenceFilmDislike\r\n            .collection(filmMainHome.id.toString() + \"\")\r\n            .whereEqualTo(\"idUser\", idUser)\r\n            .get().addOnSuccessListener { queryDocumentSnapshots: QuerySnapshot ->\r\n                if (queryDocumentSnapshots.size() > 0) {\r\n                    mediaDislike = queryDocumentSnapshots.documents[0].toObject(\r\n                        FilmReaction::class.java\r\n                    )!!\r\n                    if (mediaDislike != null) {\r\n                        mediaDislike.documentId = queryDocumentSnapshots.documents[0].id\r\n                        if (mediaDislike.type_reaction == 1) {\r\n                            statusDislike = 2\r\n                            changeImageDislikeFilm = R.drawable.ic_disliked\r\n                            changeImageLikeFilm = R.drawable.ic_like_film\r\n                            binding.ivDislike.setImageResource(changeImageDislikeFilm)\r\n                            binding.tvDislikeNumber.setTextColor(Color.parseColor(\"#2A48E8\"))\r\n                        } else {\r\n                            changeImageDislikeFilm = R.drawable.ic_dislike\r\n                            statusDislike = 1\r\n                        }\r\n                    } else {\r\n                        statusDislike = 0\r\n                    }\r\n                } else {\r\n                    changeImageDislikeFilm = R.drawable.ic_dislike\r\n                    statusDislike = 0\r\n                }\r\n            }\r\n    }\r\n\r\n    private fun updateFavorite() {\r\n        if (statusFavorite == 0) {\r\n            val format = SimpleDateFormat(\"dd-MM-yyyy\", Locale.getDefault())\r\n            val reaction = FilmReaction(\r\n                filmMainHome.id,\r\n                filmMainHome.avatar,\r\n                filmMainHome.name,\r\n                format.format(Date())\r\n            )\r\n            documentReferenceFilmFavorite.collection(activity.idUser)\r\n                .add(reaction)\r\n                .addOnCompleteListener {\r\n                    statusFavorite = 1\r\n                    documentIdFilmFavorite = it.result.id\r\n                    binding.apply {\r\n                        ivAddFavorite.setImageResource(R.drawable.ic_added_favorite)\r\n                        tvFavorite.setTextColor(Color.parseColor(\"#2A48E8\"))\r\n                    }\r\n                    Toast.makeText(\r\n                        requireActivity(),\r\n                        activity.getString(R.string.add_film_favorite),\r\n                        Toast.LENGTH_LONG\r\n                    ).show()\r\n                }\r\n        } else {\r\n            documentReferenceFilmFavorite.collection(activity.idUser)\r\n                .document(documentIdFilmFavorite)\r\n                .delete()\r\n                .addOnCompleteListener {\r\n                    statusFavorite = 0\r\n                    binding.apply {\r\n                        ivAddFavorite.setImageResource(R.drawable.ic_add_favorite)\r\n                        tvFavorite.setTextColor(Color.parseColor(\"#313030\"))\r\n                    }\r\n                    Toast.makeText(\r\n                        requireActivity(),\r\n                        getString(R.string.remove_film_favorite),\r\n                        Toast.LENGTH_LONG\r\n                    ).show()\r\n                }\r\n        }\r\n    }\r\n\r\n    private fun updateFilmLike() {\r\n        if (statusLike == 1 && changeImageLikeFilm == R.drawable.ic_liked_film) {\r\n            documentReferenceFilmLike\r\n                .collection(filmMainHome.id.toString() + \"\")\r\n                .document(mediaLike.documentId)\r\n                .update(\"type_reaction\", 1)\r\n        } else if (statusLike == 2 && changeImageLikeFilm == R.drawable.ic_like_film) {\r\n            documentReferenceFilmLike\r\n                .collection(filmMainHome.id.toString() + \"\")\r\n                .document(mediaLike.documentId)\r\n                .delete()\r\n        } else if (statusLike == 0 && changeImageLikeFilm == R.drawable.ic_liked_film) {\r\n            val format = SimpleDateFormat(\"dd-MM-yyyy\", Locale.getDefault())\r\n            val mediaReaction = FilmReaction(idUser, format.format(Date()), 1)\r\n            documentReferenceFilmLike.collection(filmMainHome.id.toString() + \"\")\r\n                .add(mediaReaction)\r\n        }\r\n    }\r\n\r\n    private fun updateFilmDisLike() {\r\n        if (statusDislike == 1 && changeImageDislikeFilm == R.drawable.ic_disliked) {\r\n            documentReferenceFilmDislike\r\n                .collection(filmMainHome.id.toString() + \"\")\r\n                .document(mediaDislike.documentId)\r\n                .update(\"type_reaction\", 1)\r\n        } else if (statusDislike == 2 && changeImageDislikeFilm == R.drawable.ic_dislike) {\r\n            documentReferenceFilmDislike\r\n                .collection(filmMainHome.id.toString() + \"\")\r\n                .document(mediaDislike.documentId)\r\n                .delete()\r\n        } else if (statusDislike == 0 && changeImageDislikeFilm == R.drawable.ic_disliked) {\r\n            val format = SimpleDateFormat(\"dd-MM-yyyy\", Locale.getDefault())\r\n            val mediaReaction = FilmReaction(idUser, format.format(Date()), 1)\r\n            documentReferenceFilmDislike.collection(filmMainHome.id.toString() + \"\")\r\n                .add(mediaReaction)\r\n        }\r\n    }\r\n\r\n    override fun onClickSubFilm(subFilm: SubFilm) {\r\n        subFilmArrayList.forEach {\r\n            it.setWatching(it.id == subFilm.id)\r\n        }\r\n        mEpisodeAdapter.setData(subFilmArrayList)\r\n        activity.playFilm(subFilm)\r\n    }\r\n\r\n    override fun onClickOpenFilmRelate(film: FilmMainHome) {\r\n        viewModel.getFilmDetail(Constant.Api.WS_TOKEN, film.id).observe(requireActivity()) {\r\n            it?.let {\r\n                val subFilm = SubFilm().apply {\r\n                    link = it.data.link\r\n                }\r\n                activity.playFilm(subFilm)\r\n                filmMainHome = it.data\r\n                showInfo()\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/smile/watchmovie/fragment/InfoFilmFragment.kt b/app/src/main/java/com/smile/watchmovie/fragment/InfoFilmFragment.kt
--- a/app/src/main/java/com/smile/watchmovie/fragment/InfoFilmFragment.kt	(revision 3604f677c60278fa7e939f9358366ff10209bf7e)
+++ b/app/src/main/java/com/smile/watchmovie/fragment/InfoFilmFragment.kt	(date 1700062612440)
@@ -309,15 +309,14 @@
 
     private fun loadLike() {
         documentReferenceFilmLike
-            .collection(filmMainHome.id.toString() + "")
-            .whereEqualTo("idUser", idUser)
-            .get().addOnSuccessListener { queryDocumentSnapshots: QuerySnapshot ->
-                if (queryDocumentSnapshots.size() > 0) {
-                    mediaLike = queryDocumentSnapshots.documents[0].toObject(
-                        FilmReaction::class.java
-                    )!!
+            .collection(filmMainHome.id.toString())
+            .whereEqualTo(Constant.ID_USER, idUser)
+            .get()
+            .addOnSuccessListener { querySnapshot: QuerySnapshot ->
+                if (querySnapshot.size() > 0) {
+                    mediaLike = querySnapshot.documents[0].toObject(FilmReaction::class.java)!!
                     if (mediaLike != null) {
-                        mediaLike.documentId = queryDocumentSnapshots.documents[0].id
+                        mediaLike.documentId = querySnapshot.documents[0].id
                         if (mediaLike.type_reaction == 1) {
                             statusLike = 2
                             changeImageDislikeFilm = R.drawable.ic_dislike
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'com.google.gms.google-services'\r\n    id 'kotlin-android'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.smile.watchmovie'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.smile.watchmovie\"\r\n        minSdk 21\r\n        targetSdk 33\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        multiDexEnabled true\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_17\r\n        targetCompatibility JavaVersion.VERSION_17\r\n    }\r\n\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n\r\n    dependenciesInfo {\r\n        includeInBundle true\r\n        includeInApk true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'com.facebook.android:facebook-android-sdk:16.0.0'\r\n    implementation 'com.google.android.gms:play-services-auth:20.7.0'\r\n\r\n    /* Khai báo thư viện OkHttp Interceptor */\r\n    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.11'\r\n\r\n    implementation \"com.github.bumptech.glide:okhttp3-integration:4.16.0\"\r\n    implementation 'com.google.code.gson:gson:2.10.1'\r\n\r\n    /* Khai báo thư viện Retrofit gọi API */\r\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\r\n\r\n    implementation 'javax.annotation:javax.annotation-api:1.3.2'\r\n    implementation 'com.google.android.material:material:1.10.0'\r\n    implementation 'com.google.firebase:firebase-firestore:24.9.1'\r\n\r\n    /* Đường dẫn file aar trên window */\r\n    /* implementation fileTree(dir: 'E:\\\\zpdk-release-v3.1', include: ['*.aar', '*.jar'], exclude: [])\r\n    implementation files(\"E:\\\\zpdk-release-v3.1.aar\") */\r\n\r\n    /* Đường dẫn file arr trên Mac */\r\n    implementation fileTree(dir: '/Users/ringme/Downloads', include: ['*.aar', '*.jar'], exclude: [])\r\n\r\n    testImplementation 'junit:junit:4.13.2'\r\n\r\n    /* Thư viện load ảnh */\r\n    implementation 'com.github.bumptech.glide:glide:4.16.0'\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.6.1'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.5'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'\r\n    implementation 'com.google.firebase:firebase-database:20.3.0'\r\n\r\n    /* Thư viện load phim */\r\n    implementation 'com.google.android.exoplayer:exoplayer:2.19.1'\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:31.2.1')\r\n    implementation 'com.google.firebase:firebase-messaging'\r\n    implementation(\"com.squareup.okhttp3:okhttp:4.11.0\")\r\n    implementation(\"commons-codec:commons-codec:1.15\")\r\n\r\n    /* Khai báo trình lắng nghe sự kiện EventBus */\r\n    implementation \"org.greenrobot:eventbus:3.3.1\"\r\n\r\n    /* Tích hợp mã Kotlin vào dự án Java */\r\n    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.10'\r\n\r\n    /* Khai báo sử dụng KTX của viewModel */\r\n    implementation \"androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2\"\r\n\r\n    /* Khai báo sử dụng KTX của liveData */\r\n    implementation(\"androidx.lifecycle:lifecycle-livedata-ktx:2.6.2\")\r\n\r\n    /* Khai báo thư viện Paging 3 */\r\n    implementation(\"androidx.paging:paging-runtime-ktx:3.2.1\")\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 3604f677c60278fa7e939f9358366ff10209bf7e)
+++ b/app/build.gradle	(date 1699975975612)
@@ -61,11 +61,11 @@
     implementation 'com.google.firebase:firebase-firestore:24.9.1'
 
     /* Đường dẫn file aar trên window */
-    /* implementation fileTree(dir: 'E:\\zpdk-release-v3.1', include: ['*.aar', '*.jar'], exclude: [])
-    implementation files("E:\\zpdk-release-v3.1.aar") */
+    implementation fileTree(dir: 'E:\\zpdk-release-v3.1', include: ['*.aar', '*.jar'], exclude: [])
+    implementation files("E:\\zpdk-release-v3.1.aar")
 
     /* Đường dẫn file arr trên Mac */
-    implementation fileTree(dir: '/Users/ringme/Downloads', include: ['*.aar', '*.jar'], exclude: [])
+    /*implementation fileTree(dir: '/Users/ringme/Downloads', include: ['*.aar', '*.jar'], exclude: [])*/
 
     testImplementation 'junit:junit:4.13.2'
 
